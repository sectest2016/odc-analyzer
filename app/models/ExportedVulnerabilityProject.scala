package models

import models.profile.MappedJdbcType
import models.profile.api._
import slick.lifted.ProvenShape

case class ExportedVulnerabilityProject(exportedVulnerabilityId: Int, projectFullId: String)

abstract class ExportedVulnerabilityProjects(tag: Tag, tableNamePart: String) extends Table[ExportedVulnerabilityProject](tag, s"exported_${tableNamePart}_vulnerability_projects"){
  def exportedVulnerabilityId = column[Int]("exported_vulnerability_id")
  def fullProjectId = column[String]("full_project_id")
  def idx_all = index(s"idx_${tableName}_all", shape, unique = true)
  private def shape = (exportedVulnerabilityId, fullProjectId)
  override def * = shape <> (ExportedVulnerabilityProject.tupled, ExportedVulnerabilityProject.unapply)
}
